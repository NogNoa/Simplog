/* Declaration Syntax */

keywords:
                        terms           statements
    defined/proved      def(ine)        pr(o)v(e)

    un[defin|prov]ed    prim(itive)     let
    
    well formed         form(ula)       syn(tax)

prim <statement>
prim <term>
syn {syn <statement>}
syn {form <term>?=<term>}

prim :
prim ;
prim |
form {<term>:<statement>}
syn {<term>;<statment>}

syn {prim <term>}
syn {let <statement>}

syn {def <term>;<statement>}

prim <type-term>
prim <object-term>
syn {<object-term> \is <type-term>}

prim <relation>
form {(t: t \is <term> ):(r: r \is  <relation>) (g: g \is  <term>) ?= t: t r g}
form {(o:\is <object-term>): (T:\is <type-term>) ?= s:\is T}

form {(t: <term> ):(r: <relation>) (g: <term>) ?= t: t r g}
form {(o: <object-term>): (T: <type-term>) ?= s:\is T}

form {(a: <term>),(b: <term>):(s:\is statement) ?= a:s \and b:s}

/*
The type of a term need to be mentioned only if it's not implied from syntax of a positive statement regarding it. The statement hold true for all implied types.

Terms that are in english rather than symbolic have to be enclosed by <>, following the example of BNF.
Escaped english words are stand-ins for symbols so they don't have to have to be enclosed by them.

The keywords and ; require enclosing their compound arguments (statements or terms) in {} rather than (). The arguments of : could be eclosed by just ().

Overloading is possible, that is- defining a term multiple times for different contexts

{prim <object-term> O} imply {\exist O}

Specifically I prefer ":\is <statement>" over just ":<statement>" because otherwise it's confusing with <statement> standing for a full statement predicate rather than a type-object. 
This level of shortening is bound to allow technical ambiguety so I'm not sure about it.
*/

/* Argument syntax */

syn {<statement> \trfr <statement>}
syn {prv {(T:\is <statement>)| {(S:\is <statement>) \trfr T}}}
syn {prv {(T:\is <statement>)|{\not T \trfr false}}}
syn {prv {(S:\is <statement>) \than T|{S \trfr T}}}

/*
\trfr is transitive. so {A \trfr B \trfr C} could be reduced to {A \trfr C}

\trfr is also enclosed in {}
*/
